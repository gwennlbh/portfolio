---
import type { GetStaticPaths } from "astro"
import { getCollection, getEntry } from "astro:content"
import Translated from "../../components/Translated.astro"

export const getStaticPaths = (async () => {
  const tags = await getCollection("tags")
  return tags.map((t) => ({ params: { tag: t.id } }))
}) satisfies GetStaticPaths

const entry = await getEntry("tags", Astro.params.tag!.replace("%20", " "))
if (!entry) return Astro.rewrite("/404")

const {
  plural,
  "learn more at": learnMoreAt,
  description,
  aliases,
  slug,
} = entry.data

const works = await getCollection("works").then((works) =>
  works
    .map((w) => w.data)
    .filter((w) =>
      w.metadata.tags?.some((t) => [slug, ...aliases].includes(t.id))
    )
)
---

<h1>{plural}</h1>

<section class="description">
  <p>{description}</p>
  {
    learnMoreAt && (
      <a href={learnMoreAt} class="learn-more" i18n>
        learn more
      </a>
    )
  }
</section>

<main>
  <ul>
    {
      works.map((work) => (
        <li>
          <a href={`/${work.id}`}>
            <article>
              <Translated
                Tag="h2"
                fr={work.content.fr?.title}
                en={work.content.en?.title}
              />
            </article>
          </a>
        </li>
      ))
    }
  </ul>
</main>

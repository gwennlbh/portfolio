---
import type { GetStaticPaths } from "astro";
import { getCollection, getEntry } from "astro:content";
import StrongHeader from "../../components/StrongHeader.astro";
import WorksGrid from "../../components/WorksGrid.astro";
import Layout from "../../layouts/Regular.astro";
import { resolveAliased } from "../../aliases";

export const getStaticPaths = (async () => {
  const tags = await getCollection("tags");
  return tags.map((t) => ({ params: { tag: t.id } }));
}) satisfies GetStaticPaths;

const tags = await getCollection("tags");

console.log(tags.find((t) => t.id === "library"));

const entry = await getEntry("tags", Astro.params.tag!.toString());
if (!entry) return Astro.rewrite("/404");

const { plural, "learn more at": learnMoreAt, description, slug } = entry.data;

const works = await getCollection("works").then((works) =>
  works
    .map((w) => w.data)
    .filter(
      (w) =>
        !w.metadata.private &&
        w.metadata.tags?.some(
          (t) => resolveAliased(t.id, tags) === resolveAliased(entry.id, tags),
        ),
    ),
);
---

<Layout>
  <StrongHeader
    back="/"
    title={plural}
    editButton="~/projects.local/portfolio/tags.yaml"
  >
    <section class="description">
      <div i18n class="description" set:html={entry.rendered!.html} />
      {
        learnMoreAt && (
          <a href={learnMoreAt} class="learn-more" i18n>
            learn more
          </a>
        )
      }
    </section>
  </StrongHeader>

  <main>
    <WorksGrid works={works} />
  </main>
</Layout>
